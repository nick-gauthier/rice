---
title: "Online Methods"
format: html
editor: visual
bibliography: references_methods.bib
---

```{r setup}
# analysis packages
library(stars) # spatio-temporal raster processing
library(sf)
library(tidyverse)
library(terra)
library(here) # cross-platform directory structures
library(readxl)
library(rcarbon)
library(rsample) # bootstraps
library(eks)
library(rnaturalearth)

bbox <- terra::ext(60, 150, -20, 50)
bbox_world <- raster::extent(-130, 155, -40, 60)  # global
asia_bbox_sf <- st_bbox(c(xmin = 60, xmax = 150, ymin = -20, ymax = 50), crs = 4326)
world_bbox_sf <- st_bbox(c(xmin = -130, xmax = 155, ymin = -40, ymax = 60), crs = 4326)

chelsa_mask <- terra::rast('../../Data/CHELSA_V2_bio_clim/CHELSA_pet_penman_mean_1981-2010_V.2.1.tif') %>%
      terra::crop(bbox_world)

theme_set(theme_bw())

# get country boundaries shapefile for plotting
sf_use_s2(FALSE)
countries <- ne_countries(returnclass = "sf", scale = 'large') %>% 
  st_crop(asia_bbox_sf)
coasts <- ne_coastline(returnclass = 'sf') %>%
  st_crop(asia_bbox_sf)
coasts_world <- ne_coastline(returnclass = 'sf') %>% 
  st_crop(world_bbox_sf)
countries_world <- ne_countries(returnclass = "sf", scale = 'large') %>% 
  st_crop(world_bbox_sf)
sf_use_s2(TRUE)

# parallel processing
available_cores <- parallel::detectCores(logical = TRUE)
```

# Methods

## Climate data

### Contemporary climate

We used high-resolution, gridded climate data from the CHELSA [@karger2017, @Karger2018, @brun2022]. CHELSA incorporates bias-corrected outputs from the ERA-5 reanalysis with high-resolution terrain data using mechanistic relationships between local climate and terrain. Compared to other global gridded climate products, CHELSA offers superior performance in mountainous regions. Its reliance on high-quality reanalysis data, instead of raw weather station data, ensures greater accuracy and internal consistency among variables.

For present day observed climate we used the CHELSA V2.1 product spanning the period 1980-2010 at a 1km resolution. We further aggregated the native 1km data to 5km and 10km grids to assess the sensitivity of our results to the scale of the analysis, given the variable spatial support of the contemporary rice extent data. In all cases we used the standard 19 Bioclim variables used in ecological niche modeling studies, derived from monthly climatologies of precipitation and minimum and maximum temperature, which collectively represent annual means, extremes, and seasonality across the annual cycle.

Past data were derived from the CHELSA-TRACE product, a downscaled version of TRACE-21k simulation using the CCSM3 climate model spanning the last 21,000 years at 100 year intervals. This product uses the older CHELSA V1.2 algorithm, along with a trend-preserving bias correction and topographic correction for shifting ice sheets across the deglacial period. Future downscaled outputs from CMIP6 processed by the Inter-Sectoral Model Intercomparison Project (ISMIP) with trend-preserving bias correction and bilinearly interpolated to CHELSA V2.1 basemap.

```{r load-chelsa, cache = TRUE}
# this isn't portable!
chelsa_files <- list.files('../../CHELSA_V2_bio_clim', 
                           full.names = TRUE)[c(1, 2:20, 31:33, 40:46, 48:50, 52:59, 67:70)]

chelsa_names <- chelsa_files %>% 
  str_split('_') %>% 
  purrr::map(~.x[5:7]) %>%
  purrr::map(~if_else(.x %in% c("1981-2010", "V.2.1.tif"), NA, .x)) %>%
  purrr::map_chr(str_flatten, collapse = '_', na.rm = TRUE)

chelsa_1km <- terra::rast(chelsa_files) %>%
  setNames(chelsa_names) %>%
  .[[c('bio1', 'bio5', 'bio10')]]

chelsa_5km <- aggregate(chelsa_1km, fact = 5, cores = available_cores, na.rm = TRUE)
chelsa_10km <- aggregate(chelsa_1km, fact = 10, cores = available_cores, na.rm = TRUE)

chelsa_1km_asia <- crop(chelsa_1km, bbox)
chelsa_5km_asia <- crop(chelsa_5km, bbox)
chelsa_10km_asia <- crop(chelsa_10km, bbox)


# stars version
chelsa_obs <- list.files('../../Data/CHELSA_V2_bio_clim', full.names = TRUE, pattern = '*_bio1_|_bio10_|_bio5_*') %>%
  read_stars(along = 'variable') %>%
  st_set_dimensions('variable', values = c('bio1', 'bio10', 'bio5'))

```

```{r}
# check the range of values at different resolutions and extents. the upper temperatures don't appear to be very sensitive to resolution, which is good
list(chelsa_1km, chelsa_5km, chelsa_10km, chelsa_1km_asia, chelsa_5km_asia, chelsa_10km_asia) %>%
  map(minmax)
```

```{r}
writeCDF(chelsa_5km, here('data/data-derived/chelsa_5km.nc'), overwrite = TRUE, zname = 'var')
writeCDF(chelsa_10km, here('data/data-derived/chelsa_10km.nc'), overwrite = TRUE, zname = 'var')
writeCDF(chelsa_5km_asia, here('data/data-derived/chelsa_5km_asia.nc'), overwrite = TRUE, zname = 'var')
writeCDF(chelsa_10km_asia, here('data/data-derived/chelsa_10km_asia.nc'), overwrite = TRUE, zname = 'var')
```

### Future climate projections

We acquired downscaled projections of future climate from the CMIP6 archive, also downscaled using the CHELSA algorithm [@brun2022].

```{r}
cmip6_26 <- list.files('~/Dropbox (UFL)/CHELSA_CMIP6/ssp126/', full.names = TRUE) %>%
  terra::rast() %>%
  setNames(chelsa_names[2:20]) %>%
  .[[c('bio1', 'bio5', 'bio10')]] %>%
  aggregate(fact = 5, mean, cores = available_cores) %>%
  terra::crop(bbox)

cmip6_70 <- list.files('~/Dropbox (UFL)/CHELSA_CMIP6/ssp370/', full.names = TRUE) %>%
  terra::rast() %>%
  setNames(chelsa_names[2:20]) %>%
  .[[c('bio1', 'bio5', 'bio10')]] %>%
  aggregate(fact = 5, mean, cores = available_cores) %>%
  terra::crop(bbox)

cmip6_85 <- list.files('~/Dropbox (UFL)/CHELSA_CMIP6/ssp585/', full.names = TRUE) %>%
  terra::rast() %>%
  setNames(chelsa_names[2:20]) %>%
  .[[c('bio1', 'bio5', 'bio10')]] %>%
  aggregate(fact = 5, mean, cores = available_cores) %>%
  terra::crop(bbox)

writeCDF(cmip6_85, here('data/data-derived/chelsa_cmip6_85_5km.nc'), 
         overwrite = TRUE, zname = 'var')
writeCDF(cmip6_70, here('data/data-derived/chelsa_cmip6_70_5km.nc'), 
         overwrite = TRUE, zname = 'var')
writeCDF(cmip6_26, here('data/data-derived/chelsa_cmip6_26_5km.nc'), 
         overwrite = TRUE, zname = 'var')


model_names <- c('gfdl', 'ipsl', 'mpi', 'mri', 'ukesm')
ssp_names <- c('ssp126', 'ssp370', 'ssp585')

cmip6 <-  model_names %>%
  map(paste,  ssp_names, sep = '/' ) %>%
  map_depth(1, ~paste0('~/Dropbox (UFL)/Data/CHELSA/CMIP6/2071-2100/', .x, '/bio') %>% as.list()) %>%
  map_depth(2, ~list.files(.x, full.names = TRUE, pattern = '*_bio1_|_bio5_|_bio10_*')) %>%
  map_depth(2, ~read_stars(.x) %>%
     setNames(c('bio1', 'bio10', 'bio5')) %>%
     st_redimension()) %>%
  map(~do.call('c', .x) %>% 
        setNames(c('SSP1-2.6', 'SSP3-7.0', 'SSP5-8.5')) %>% 
        st_redimension()) %>%
  do.call('c', .) %>%
  setNames(model_names) %>%
  st_redimension() %>%
  st_set_dimensions(names = c('x', 'y', 'variable', 'ssp', 'model')) %>%
  setNames('temperature') %>%
  .[countries]


cmip_downsample <- st_downsample(cmip6, 5)
plot(cmip_downsample[,,,1,1,1])
saveRDS(cmip_downsample, 'cmip6_downsampled.rds')
object.size(cmip_downsample)
  # mutate(temperature = units::set_units(temperature, degree_C))

#write_mdim(t3, 'cmip_test.nc')
#test5 <- read_ncdf('cmip_test.nc', var = 'temperature', crs = 4326, eps = 0.00833333333)
#test6 <- read_stars('cmip_test.nc')
```

```{r}
pairs(chelsa_5km_asia, maxcells = 100000)
pairs(chelsa_1km_asia, maxcells = 100000)
```

#### Country level summaries

```{r}
countries_sub <- countries %>% 
  filter(name %in% c('China', 'India', 'Indonesia', 'Bangladesh', 'Vietnam', 'Thailand', 'Philippines', 'Myanmar', 'Pakistan', 'Japan', 'South Korea', 'Cambodia', 'Laos', 'Nepal', 'Malaysia'))
         
obs_test <- chelsa_obs %>%
  split('variable') %>%
  mutate(bio1 = bio1 > units::drop_units(bio1_limit),
         bio10 = bio10 > units::drop_units(bio10_limit),
         bio5 = bio5 > units::drop_units(bio5_limit)) %>%
  rename(`Mean annual temperature` = bio1,
         `Max temperature of warmest quarter` = bio10,
         `Max temperature of warmest month` = bio5) %>%
  merge(name = 'variable') %>%
  st_crop(st_bbox(countries_sub)) %>%
  st_downsample(5) %>%
  setNames('sum')

plot(obs_test)

test <- cmip6 %>%
  split('variable') %>%
  mutate(bio1 = bio1 > units::drop_units(bio1_limit),
         bio10 = bio10 > units::drop_units(bio10_limit),
         bio5 = bio5 > units::drop_units(bio5_limit)) %>%
  rename(`Mean annual temperature` = bio1,
         `Max temperature of warmest quarter` = bio10,
         `Max temperature of warmest month` = bio5) %>%
  merge(name = 'variable')


plot(countries['name'] )

test1 <- st_crop(test, st_bbox(countries_sub)) %>%
  st_downsample(5) %>%
  setNames('sum')

areas <- st_area(test1) %>% units::drop_units()
plot(areas)
plot(obs_test)

test2 <- test1 * areas
plot(test2)

obs_weight <- obs_test * areas
plot(obs_weight, downsample = 0)

test3 <- aggregate(test2, by = st_geometry(countries_sub), FUN = sum, na.rm = TRUE) %>%
  as_tibble() %>%
  select(-geometry) %>%
  mutate(name = rep(countries_sub$name, length.out = n()))



test4 <- aggregate(areas, by = st_geometry(countries_sub), FUN = sum, na.rm = TRUE) %>%
  as_tibble() %>%
  select(-geometry) %>%
  mutate(name = countries_sub$name)

obs_ext <- aggregate(obs_weight, by = st_geometry(countries_sub), FUN = sum, na.rm = TRUE) %>%
  as_tibble() %>%
  select(-geometry) %>%
  mutate(name = rep(countries_sub$name, length.out = n())) %>%
  left_join(test4) %>%
   mutate(percent = round(sum / area * 100),
          ssp = 'present')


df <- left_join(test3, test4) %>%
  mutate(percent = round(sum / area * 100)) %>%
  #select(-sum, -area) %>%
  group_by(name, variable, ssp) %>%
  summarise(percent = mean(percent, na.rm = TRUE),
            sum = mean(sum, na.rm = TRUE),
            area = mean(area, na.rm = TRUE)) %>%
  ungroup() %>%
  bind_rows(obs_ext)

saveRDS(df, 'data/data-derived/country_stats.rds')

```

```{r}
library(exactextractr)
test_fut <- c(chelsa[['bio1']],cmip6_26[['bio1']], cmip6_70[['bio1']], cmip6_85[['bio1']]) %>%
  setNames( c('obs', 'ssp1', 'ssp3', 'ssp5'))
plot(test_fut)
areas <- terra::cellSize(test_fut, unit = 'km')
test2 <- (areas * (test_fut > 27.5)) %>%
  setNames( c('obs', 'ssp1', 'ssp3', 'ssp5'))
plot(test2)
test3 <- exact_extract(test2, countries, 'sum', append_cols = c('admin', 'pop_est'))
test4_areas <- exact_extract(areas, countries, 'sum', append_cols = 'admin')
tab <- test4_areas %>%
  rename(area = sum) %>%
  left_join(test3) %>%
  pivot_longer(sum.obs:sum.ssp5) %>%
  mutate(percent = round(value / area * 100),
         name = str_sub(name, 5)) %>%
  select(admin, pop_est, name, percent) %>%
  pivot_wider(names_from = name, values_from = percent) %>%
  filter(ssp5 > 0, pop_est > 100) %>%
  arrange(-as.numeric(pop_est), -ssp5) %>%
  select(-pop_est) %>%
  rename(Country = admin)

knitr::kable(tab)

admin_summary <- (future_bio1 > 27.5) %>%
  st_as_stars() %>%
  aggregate(countries, fun = function(x) sum(x == TRUE, na.rm = TRUE) / length(na.omit(x)))

plot(countries)

tab %>%
  pivot_longer(-Country) %>%
  ggplot(aes(name, value, group = Country, color = Country)) + geom_line()
```

### Paleoclimate reconstructions

Including the global temperature reconstruction of [@10.5194/cp-18-2599-2022; \@10.5281/zenodo.6426332].

```{r erb}
erb <- here('data/data-raw/holocene_reconstruction.nc') %>% 
  read_ncdf(var = 'recon_tas_ens') %>%
  st_set_crs(4326) %>%
  st_crop(asia_bbox_sf)

ens_sd <- st_apply(erb, c(1,2,4), sd)

ens_ts <- st_apply(erb, c(3, 4), mean) %>%
  st_as_stars() %>%
  as_tibble()

ens_mean_ts <- st_apply(erb, c(4), mean) %>%
  st_as_stars() %>%
  as_tibble()

ggplot(ens_ts, aes(ages, mean)) +
  geom_line(alpha = 0.05, aes(group = ens_selected)) +
geom_line(data = ens_mean_ts, color = 'red')

plot(ens_sd[,,,1:10], downsample = 0)
plot(erb[,,,1,1], downsample = 0)
  slice('ages', 1)
st_dimensions(test)
ggplot() +
  geom_stars(data = erb[,,,1,1], downsample = 0) +
  scale_fill_viridis_c(option = 'magma') +
  geom_sf(data = coasts)
               
times <- st_get_dimension_values(erb_rotated, 'ages')

floor_mil   = function(value){ return(value - value %% 1000) }
floor_cen   = function(value){ return(value - value %% 100) }

centuries <- floor_cen(1949.5 - times)
mil <- floor_mil(1949.5 - times)

erb_millennia <- erb_rotated %>%  
  as('SpatRaster') %>%
  rotate() %>%
  tapp(mil, fun = mean) %>%
  st_as_stars(crs = 4326) %>%
  st_set_dimensions('band', names = 'time', 
                    values = unique(mil) / 1000 - 1) %>%
  setNames('tas') %>%
  st_crop(asia_bbox_sf) %>%
  mutate(tas = units::set_units(tas, degree_c)) %>%
  filter(time >= -8)

erb_decadal <- erb_rotated %>%  
  as('SpatRaster') %>%
  rotate() %>%
  st_as_stars(crs = 4326) %>%
  st_set_dimensions('band', names = 'time', 
                    values = -1 * (times + 0.5)) %>%
  setNames('tas') %>%
 st_crop(asia_bbox) %>%
  mutate(tas = units::set_units(tas, degree_c))

trace_mean_5bp_3bp <- list.files('../../Data/TraCE-TREFHT', full.names = TRUE) %>%
  map(~read_ncdf(., var = 'TREFHT', eps = 0.01, make_time = FALSE) %>% 
        st_crop(asia_bbox_sf)) %>%
  do.call(c, .) %>%
  st_set_dimensions(names = c('x', 'y', 'time')) %>% 
  filter(between(time, -5, -3)) %>%
  st_apply(1:2, mean) %>%
  st_warp(slice(erb, 'time', 1), use_gdal = TRUE, method = 'average') %>%
  setNames('tas') %>%
  mutate(tas = units::set_units(tas, kelvin) %>% units::set_units(degree_C))

ggplot() +
  geom_stars(data = trace_mean_5bp_3bp) +
  scale_fill_viridis_c(option = 'magma') +
  geom_sf(data = coasts)
```

```{r}
trace_order <- list.files('~/Dropbox (UFL)/Data/CHELSA/chelsa_trace/bio01', 
                          full.names = FALSE) %>%
  str_sub(23, -10) %>% 
  as.numeric() %>% 
  order()

trace_tmp <- list.files('~/Dropbox (UFL)/Data/CHELSA/chelsa_trace/bio01', 
                        full.names = TRUE)[trace_order] %>%
  read_stars(along = 'time')

trace_tmax <- list.files('~/Dropbox (UFL)/Data/CHELSA/chelsa_trace/bio05', 
                         full.names = TRUE)[trace_order] %>%
  read_stars(along = 'time') 

trace_twarm <- list.files('~/Dropbox (UFL)/Data/CHELSA/chelsa_trace/bio10', 
                         full.names = TRUE)[trace_order] %>%
  read_stars(along = 'time') 

chelsa_trace <- c(trace_tmp, trace_tmax, trace_twarm) %>%
  st_set_dimensions('time', values = seq(-12, 0, 0.1) * 1000, names = 'time') %>%
  setNames(c('MAT', 'tmax', 'twarm'))
```

### Loading Preprocessed data

```{r}
rast(here('data/data-derived/chelsa_cmip6_85_5km.nc')) %>% setNames(chelsa_names[2:20]) %>% plot
writeCDF(cmip6_70, here('data/data-derived/chelsa_cmip6_70_5km.nc'), 
         overwrite = TRUE, zname = 'var')
writeCDF(cmip6_26, here('data/data-derived/chelsa_cmip6_26_5km.nc'), 
         overwrite = TRUE, zname = 'var')
```

## 

## Contemporary Rice Distribution Data

We collected rice occurrence data from a variety of sources combining information from satellites, administrative statistics, and herbarium collections. 

-   Satellite-based estimates of lowland rice extent in Asia (Nelson and Gumma 2015). This dataset employs high resolution (500m) presence absences, and has relatively uniform sampling across temperate and tropical regions that is more objective than spatially biased occurrence records. Drawbacks with this dataset include its limited extent in east and southeast Asia and confusion with intercropped wheat in northeast China. Issues also exist with this dataset in its ability to distinguish between wetlands and rice cultivation in Indonesia.

-   Estimates of paddy rice harvested areas from Monfreda et al (2008) in the year 2,000. This dataset combines satellite-based estimates of cropland with subnational statistics for rice harvested areas. It employs geospatial cropland maps to disaggregate harvest area and yield census data and has a global extent at \~10km resolution. Very commonly used dataset and good for what it is given its global extent. Some issues in countries without fine-grained administrative data at subnational level, leads to some overly smoothed areas in, e.g. Laos and Kazakhstan. Use of harvested area as metric can be misleading in regions with multiple annual harvests, which are double (or triple) counted. Also compared to more up-to-date versions of the same data using better subnational statistics from Ray et al.

-   SPAM data are high-quality downscaled crop maps that combine census data, satellites, and expert models. These use thermal tolerances from the UN GAEZ system so are not entirely independent from the climate data used elsewhere, so these data are given less weight in spite of their global coverage and ability to distinguish between different farming systems (e.g. rainfed vs irrigated).

-   Geolocated occurrence records for rice and its wild progenitor from GBIF, the Oryzabase, and other sources. These are point-based occurrence records, typically associated with herbarium specimens or germplasm samples from genomic studies. As these are directly identified occurrence records they are in general more reliable than area-averaged crop occurrences inferred from satellites and subnational statistics. However, occurrence data are more prone to spatial sampling bias and data access, for example with areas such as China having considerably less sampling effort than neighboring countries in spite of their similar extents. These data also tend to sample upland varieties of rice more reliably at the expense of larger paddy fields.

### Point Occurrences

#### GBIF

*Note, also have option for custom gbif call with filtering.*

source [@yangGlobalNicheShifts2022] via GBIF

```{r}
occ <- here('data/data-raw/Datasets of occurrence records of rice and its wild progenitor.xlsx')

rufipogon <- read_excel(occ, skip = 6715) %>%
  select(-x, -`the wild progenitor`) %>%
  st_as_sf(coords = 2:1, crs = 4326) %>%
  st_crop(asia_bbox_sf) %>% # remove south american obs, likely different species
  mutate(rice = 'present')

sativa <- read_excel(occ, n_max = 6714) %>%
  remove_missing() %>%
  select(-x, -Rice) %>%
  st_as_sf(coords = 2:1, crs = 4326) %>%
  mutate(rice = 'present') %>%
  select(-continent)

ggplot() +
  geom_sf(data = countries_world, color = 'white') +
  geom_sf(data = sativa, size = 0.1, color = 'black') +
  geom_sf(data = rufipogon, color = 'green', size = 0.1) +
  labs(title = "Rice occurence data", subtitle = "O. sativa (black), O. rufipogon (green)", caption = 'source: GBIF, CHV') +
  #geom_sf(data = arch, color = 'red', size = 0.11) +
  theme_minimal()
```

#### Oryzbase and others

The GBIF occurrences are undersampled in China, so we can supplement them with point accession from Oryzabase. These data are biased because sativas only come from China and rufipogon does not!

source: [@civanRoleGeneticIntrogression2018], ultimately from the Rice Haplotype Map Project: <http://202.127.18.>221/RiceHap3/

```{r}
gen_occs <- read_excel('data/data-raw/12862_2018_1180_MOESM1_ESM.xls', skip = 2) %>%
  mutate(lat = parse_double(`Latitude*†`),
         lon = parse_double(`Longitude*†`),
         species = `Species/ecotype*`) %>%
  filter(!(is.na(lon) | is.na(lat))) %>%
  st_as_sf(coords = c('lon', 'lat'), crs = 4326) %>%
  select(species) %>%
  filter(species %in% c('indica', 'O. rufipogon', 'temperate japonica'))

ggplot() +
  geom_sf(data = gen_occs, aes(color = species),
          size = 1) +
 # scale_color_brewer(palette = 'Spectral') +
  geom_sf(data = coasts, color = 'black') 
```

#### Combined

Thin the two sets of occurrence records to a 1km grid and combine. So let's combine this with the GBIF occurrence above. It definitely helps us sample the temperate varieties better, but its still a minor influence relative to the numbers of gbif points. also include These are predictions from a classifier that use climate data, so not exactly useful here but interesting to see. Aus is grown in summer before monsoon and harvested in fall -- not great quality but as a backup

ramirez-villegasStateExSitu2022:

> Our crop landrace group distribution modelling and conservation gap analysis rely on occurrence data, including coordinates of locations where landraces were previously collected for ex situ conservation and reference sightings. For ex situ conservation records, occurrences marked as landraces were retrieved from two major online databases: the Genesys Plant Genetic Resources portal[^1](https://www.nature.com/articles/s41477-022-01144-8#ref-CR33 "Genesys-PGR: a gateway to genetic resources. Global Crop Diversity Trust https://www.genesys-pgr.org/
>
> ```         
>              (2021).")^ and the World Information and Early Warning System on Plant Genetic Resources for Food and Agriculture (WIEWS) of the Food and Agriculture Organization of the United Nations^[34](https://www.nature.com/articles/s41477-022-01144-8#ref-CR34 "United Nations Food and Agriculture Organization World Information and Early Warning System on Plant Genetic Resources for Food and Agriculture. Food and Agricultural Organization of the United Nations 
>               http://www.fao.org/wiews/en/
>               
>              (2021).")^. Occurrences were also obtained directly from individual international genebank information systems: AfricaRice, the International Transit Centre and Musa Germplasm Information System of Bioversity International^[35](https://www.nature.com/articles/s41477-022-01144-8#ref-CR35 "Ruas, M. et al. MGIS: managing banana (Musa spp.) genetic resources information and high-throughput genotyping data Database 
>               https://doi.org/10.1093/database/bax046
>               
>              (2017).")^, CePaCT, International Center for Tropical Agriculture (CIAT), International Maize and Wheat Improvement Center (CIMMYT), International Potato Center (CIP), International Center for Agricultural Research in the Dry Areas (ICARDA), International Crops Research Institute for the Semi-arid Tropics (ICRISAT), International Institute of Tropical Agriculture (IITA) and International Rice Research Institute (IRRI), as well as from the United States Department of Agriculture (USDA) Genetic Resources Information Network (GRIN)–Global^[36](https://www.nature.com/articles/s41477-022-01144-8#ref-CR36 "National Plant Germplasm System, GRIN-Global Accessions. US Department of Agriculture Agricultural Research Service 
>               https://npgsweb.ars-grin.gov/gringlobal/search
>               
>              (2021).")^ and the Comisión Nacional para el Conocimiento y Uso de la Biodiversidad (CONABIO)^[37](https://www.nature.com/articles/s41477-022-01144-8#ref-CR37 "Portal de Geoinformacion. Comisión Nacional para el Conocimiento y Uso de la Biodiversidad 
>               http://www.conabio.gob.mx/informacion/gis/
>               
>              (2021).")^. Occurrences were compiled from the Global Biodiversity Information Facility (GBIF), with ‘living specimen’ records classified as ex situ conservation records and the remaining serving as reference sightings for use in distribution modelling. Reference occurrences were also drawn from published literature ([Supplementary Information](https://www.nature.com/articles/s41477-022-01144-8#MOESM1)). Duplicated observations within or between data sources were eliminated, with a preference to utilize the most original data. Coordinates were corrected or removed when latitude and longitude were equal to zero or inverted, located in water bodies or in the wrong country or had poor resolution (\<2 decimal places). Occurrences were clipped to study areas per crop. The complete occurrence dataset is available in Supplementary Dataset [2](https://www.nature.com/articles/s41477-022-01144-8#MOESM3).
> ```

[^1]: 33

```{r}
rufip_thin <- dismo::gridSample(st_coordinates(rufipogon), r = chelsa_mask) %>% 
  as_tibble() %>%
  st_as_sf(coords = c('X', 'Y'), crs = 4326) %>%
  mutate(presence = 1,
         species = 'rufipogon')

sativa_thin <- dismo::gridSample(st_coordinates(sativa), r = chelsa_mask) %>% 
  as_tibble() %>%
  st_as_sf(coords = c('X', 'Y'), crs = 4326) %>%
  mutate(presence = 1,
         species = 'sativa')

gbif_thin <- bind_rows(sativa_thin, rufip_thin)

gen_thinned <- gen_occs %>%
  group_nest(species) %>%
  mutate(data = map(data, 
                    ~dismo::gridSample(st_coordinates(.x), 
                                       r = chelsa_mask) %>%
                      as_tibble())
  ) %>%
  unnest(data) %>%
  st_as_sf(coords = c('X', 'Y'), crs = 4326) %>%
  mutate(presence = 1)

comb <- bind_rows(gen_thinned, gbif_thin)

ggplot() +
  geom_sf(data = comb %>% st_crop(asia_bbox_sf), size = .5, aes(color = species)) +
  geom_sf(data = coasts)


pred_var <- read_csv('data/data-raw/Ramirez-Villegas/Sup_table_3_per_crop/rice (asia).csv') %>%
  st_as_sf(coords = c('Longitude', 'Latitude'), crs = 4326) %>%
  select(ensemble)

ggplot(pred_var, aes(color = ensemble)) +
  geom_sf(size = 1, alpha = 0.5) +
  scale_color_brewer(palette = 'Spectral') +
  geom_sf(data = coasts, color = 'black')

comb_final <- comb %>%
  filter(!(species %in% c('O. rufipogon', 'rufipogon'))) %>%
  bind_rows(pred_var) %>%
  st_coordinates() %>%
  dismo::gridSample(r = chelsa_mask) %>% 
  as_tibble() %>%
  st_as_sf(coords = c('X', 'Y'), crs = 4326) %>%
  mutate(presence = 1)


ggplot() +
  geom_sf(data = comb_final %>% st_crop(asia_bbox_sf), size = .5) +
  geom_sf(data = coasts)
```

Now add some background points buffered around the real occurrences.

We thinned the occurrence data to minimize influences from sampling biases. We select one sample per 10km grid in the predictor data [@dismo]. Because we do not have true absence data for past and present rice occurrences, we generated `n_background` latitude-weighted random background points on land surfaces. This allows us to estimate the relative suitability for the given crop with respect to the global climatic baseline.

We sample everywhere to get background points, and do not ignore places with occurrences.

should sample bg points within 100km buffer of presences, and/or convex hull

```{r}
occurrence_background <- st_sample(countries_world, 2 * nrow(comb_final)) %>% st_sf()

buffer <- comb_final %>%
  st_buffer(dist = 500000) %>%
  st_union() %>%
  st_make_valid()

occ_dat <- occurrence_background %>% 
  st_filter(buffer) %>%
  mutate(presence = 0) %>%
  bind_rows(comb_final) %>%
  bind_cols(., terra::extract(chelsa_1km, ., ID = FALSE)) %>%
  mutate(presence = factor(presence, levels = c(1, 0)))

ggplot(occ_dat) +
  geom_sf(data = countries_world, color = NA) +
  geom_sf(size = 0.1, aes(color = factor(presence, levels = c(0, 1)))) +
  scale_color_manual(values = c('black', 'red'), name = 'Presence') + 
  theme_minimal() +
  geom_sf(data = buffer, fill = NA)
```

### Satellite-derived occurrences

#### International Rice Research Institute

Nelson and gumma, just lowland rice for asia... Andrew Nelson, Murali Krishna Gumma. A map of lowland rice extent in the major rice growing countries of Asia. 2015, 37p. IRRI, Los Banos, Philippines.

hard to verify in china, maybe overpredicts in northeast china where there's wheat. also wetlands in indonesia

raw resoultion of 500m, aggregated to 5km extents. thresold at threshold of 0.1 to 0.2 from Watson et al 2015 and singh et al 2017 for occurrences to reduce data size and minize singelpixel false positives. results robust to exact resolution and point/raster definition

```{r fig.width=6, fig.height=5}
irri <- rast(here('data/data-raw/IRRI Asia Rice Extent Map/asia-rice-extent.tif')) %>%
  aggregate(fact = 10) %>%
  mask(., resample(chelsa_mask, .)) %>%
  setNames('extent')

ggplot() +
  geom_stars(data = st_as_stars(irri)) +
  scale_fill_viridis_c(na.value = 'NA') +
  coord_quickmap()

ggplot() +
  geom_stars(data = st_as_stars(irri) > 0.04) +
  scale_fill_manual(values = c('grey', 'red'), na.value = NA, guide = FALSE) +
  #geom_sf(data = coasts %>% st_crop(st_as_stars(irri)), color = 'white') +
  labs(title = 'Satellite-based lowland rice extent', caption = 'Nelson and Gumma (2015) "A map of lowland rice extent in the major rice growing countries of Asia"', x = '', y = '')
```

```{r}
set.seed(1234567)

irri_pts <- spatSample(irri, 100000, na.rm = TRUE, as.points = TRUE) %>%
  st_as_sf() %>%
  mutate(presence = as.numeric(extent > 0.05))

irri_buffer <- irri_pts %>%
  filter(presence == 1) %>%
  sample_frac(0.1) %>%
  st_buffer(dist = 500000) %>%
  st_union() %>%
  st_make_valid()

irri_occ <- st_filter(irri_pts, irri_buffer) %>%
  bind_cols(., terra::extract(chelsa_5km, ., ID = FALSE)) %>%
  mutate(presence = factor(presence, levels = c(1, 0)))

ggplot(irri_occ) +
  geom_sf(data = countries, color = NA) +
  geom_sf(size = 0.1, aes(color = factor(presence, levels = c(0, 1)))) +
  geom_sf(data = irri_buffer, fill = NA) +
  scale_color_manual(values = c('black', 'red'), name = 'Presence') + 
  theme_minimal() 
```

#### Monfreda and Ramankutty

Monfreda and Ramankutty -- I think this is just paddy as well. this is 2008, but there is an update 2012 version by ray, updated again more recently. -- but this is harvested area, which is problematic because you can have multiple harvest a year.

```{r}
# this is just "paddy rice" according to documentation
monfreda_fraction <- geodata::crop_monfreda('rice', 
                                            var = 'area_f', 
                                            here('data/data-raw')) %>%
  crop(., resample(chelsa_mask, .), mask = TRUE) %>% # does this clip polynesia?
  clamp(upper = 1, values = TRUE) %>% # fraction can be greater than 1 because of multi cropping
  st_as_stars() %>%
  st_crop(world_bbox_sf) %>%
  setNames('area_f')

ggplot() +
  geom_stars(data = monfreda_fraction) +
  scale_fill_viridis_c(na.value = NA, trans = 'log') +
  geom_sf(data = coasts_world, color = 'black') 

ggplot() +
  geom_stars(data = monfreda_fraction > 0.01) +
  scale_fill_manual(values = c('grey', 'red'), na.value = NA, guide = FALSE) +
  geom_sf(data = coasts_world, color = 'black') 
```

Unlike IRRI, we extract all the valid pixels and calculate the background points separately.

```{r}
monfreda_pts <- monfreda_fraction %>%
  rast() %>%
  clamp(lower = 0.05, values = FALSE) %>% 
  as.data.frame(xy = TRUE) %>%
  st_as_sf(coords = c('x', 'y'), crs = 4326) %>%
  mutate(extent = lyr.1,
         presence = 1) %>%
  dplyr::select(-lyr.1) 

monfreda_buffer <- monfreda_pts %>%
  sample_frac(0.1) %>%
  st_buffer(dist = 500000) %>%
  st_union() %>%
  st_make_valid()

monfreda_occ <- st_sample(countries_world, 2 * nrow(monfreda_pts)) %>% 
  st_sf() %>%
  st_filter(monfreda_buffer) %>%
  mutate(extent = 0, presence = 0) %>%
  bind_rows(monfreda_pts) %>%
  bind_cols(., terra::extract(chelsa_10km, ., ID = FALSE)) %>%
  mutate(presence = factor(presence, levels = c(1, 0)))

ggplot(monfreda_occ) +
  geom_sf(data = countries_world, color = NA) +
  geom_sf(size = 0.1, aes(color = factor(presence, levels = c(0, 1)))) +
  geom_sf(data = monfreda_buffer, fill = NA) +
  scale_color_manual(values = c('black', 'red'), name = 'Presence') + 
  theme_minimal() 
```

```{r fig.asp=0.4, fig.width = 10}
a <- ggplot(occ_dat) +
  geom_sf(data = countries_world, color = NA) +
  geom_sf(size = 0.1, aes(color = factor(presence, levels = c(0, 1)))) +
  scale_color_manual(values = c('black', 'red'), name = 'Presence') + 
  theme_minimal() +
  geom_sf(data = buffer, fill = NA)

b <- ggplot(irri_occ) +
  geom_sf(data = countries, color = NA) +
  geom_sf(size = 0.1, aes(color = factor(presence, levels = c(0, 1)))) +
  geom_sf(data = irri_buffer, fill = NA) +
  scale_color_manual(values = c('black', 'red'), name = 'Presence') + 
  theme_minimal() 

c <- ggplot(monfreda_occ) +
  geom_sf(data = countries_world, color = NA) +
  geom_sf(size = 0.1, aes(color = factor(presence, levels = c(0, 1)))) +
  geom_sf(data = monfreda_buffer, fill = NA) +
  scale_color_manual(values = c('black', 'red'), name = 'Presence') + 
  theme_minimal() 

library(patchwork)
b + (a / c) + plot_layout(guides = 'collect') + plot_annotation(tag_levels = 'A', tag_suffix = ')')
```

```{r}
save(irri_occ, monfreda_occ, occ_dat,
     file = here('data/data-derived/occurrence_data.RData'))
```

## Archaeological Data

We used rice occurrence data from archaeological sites using version 2 of the Rice Archaeological Database \@[@silva2015]. The data span the period from xxx to yyy. A total of zzz sites are included in the database, mainly from eastern China, Japan, Korea, and southeast Asia. These are generally records of botanical remains thought to be *O. sativa japonica* from archaeological sites. Some of these occurrence were likely wild-type *O. rufipogon* instead based on their timing. We removed one such extremely early occurrence from xxx as a likely outlier.

Also cleaned data from [@gutaker2020]

Stephens and fuller data ... but its pdf.

synthesis from [@longetal2022]

Actually for now don't use rice archaeological database directly, just derivatives, because of the odd file type making it difficult to extract the date information!

removed khao sam kheo given incorrect date per original source, similar in Crema –

```{r}
gb2018 <- here('data/data-raw/guedesbocinsky2018_crops_across_eurasia.xlsx') %>%
  read_excel() %>%
  filter(is.na(`Exclude?`) & (!is.na(Rice) | !is.na(`Rice (wild)`))) %>% # just rice
  st_as_sf(coords = c('Longitude', 'Latitude'), crs = 4326) %>%
  select(labcode = `Lab sample identifier`, 
         site = Site, 
         Period, 
         Notes, 
         Material, `14C date on cereal?`, 
         age_lower = `Age range lower (BP)`, 
         age_upper = `Age range upper (BP)`, 
         C14Age = `14C age BP`, 
         C14AgeError = `1-sigma uncertainty`, 
         Reference, 
         `Rice (wild)`) %>%
  filter(site != 'Huizui East') %>% # dupliated with diff name in long
  filter(is.na(labcode) | labcode != 'Beta- 378858') # incorrect date per original source and long

long <- here('data/data-raw/ScienceDirect_files_13Feb2023_15-12-15/1-s2.0-S1040618221005577-mmc2.xlsx') %>%
  read_excel(skip = 11, n_max = 260) %>%
  rename(lon = `Longitude (°E)`,
         lat = `Latitude (°N)`) %>%
  st_as_sf(coords = c('lon', 'lat'), crs = 4326) %>%
  st_crop(asia_bbox_sf) %>% # some odd points in africa?
  rename(site = `Archaeological site`,  
         C14Age = `Uncalibrated radiocarbon age (14C BP)`, 
         cal_age = `Calibrated median (BCE/CE)`, 
         labcode = `Lab ID`,
         C14AgeError = `Radiocarbon dating uncertainty (yr)`) %>%
  mutate(site = if_else(site == 'Khao Sam Kaeo', 'Khao Sam Kheo', site),
         site = if_else(site == 'Ter', 'Ter (Thair)', site)) %>%
  filter(!(labcode %in% gb2018$labcode))

long_filter <- long %>%
  bind_rows(gb2018) %>%
  select(site, C14Age) %>%
  st_drop_geometry() %>%
  remove_missing() %>%
  filter(duplicated(.))

japan_arch <- read_csv('data/data-raw/sciadv.adc9171_data_s1.csv') %>% # two rows ohave commas, not important
  filter(USED == 'TRUE') %>% 
  st_as_sf(coords = c('Longitude', 'Laitude'), crs = 4326) %>% # "Laitude"
  rename(site = SiteName_en, labcode = LabCode)

c14_cleaned <- bind_rows(
  long = anti_join(long, long_filter),
  gb = filter(gb2018, !is.na(C14Age)), 
  japan = japan_arch, 
  .id = 'source') %>%
   mutate(calib = ifelse(st_coordinates(geometry)[,2] > 0,
                         "intcal20",
                         "shcal20")) %>%
  select(site, C14Age, C14AgeError, calib, source) %>%
  arrange(site, C14Age)

cal <- calibrate(c14_cleaned$C14Age, 
                 c14_cleaned$C14AgeError, 
                 calCurves = c14_cleaned$calib,
                verbose = FALSE) 

c14_cleaned <- c14_cleaned %>%
  mutate(med_age = medCal(cal),
         id = 1:n()) %>%
  select(site, id, med_age, source)

phases_cleaned <- gb2018 %>% 
  filter(is.na(C14Age), !is.na(age_lower)) %>%
  select(site, age_lower, age_upper) %>%
  # ~5 sites have switched upper and lower ages
  mutate(temp_lower = pmax(age_lower, age_upper),
         age_upper = pmin(age_lower, age_upper),
         age_lower = temp_lower,
         source = 'gb') %>%
  rowwise() %>%
  mutate(med_age = median(c(age_lower, age_upper)), .before = age_lower) %>%
  ungroup() %>%
  select(-temp_lower) |>
  filter(med_age <= 12000) |> # no dates with median age older than 12ka, removes 2x from Diaotonghuan cave and 1 each from Xianrendong and Yuchanyan
  mutate(id = 1:n(),
         id = id + nrow(c14_cleaned)) 

arch_dat <- bind_rows(c14 = c14_cleaned,
                      period = phases_cleaned,
                      .id = 'type') %>%
  mutate(across(contains('age'), ~. * -1))

rm(long_filter, japan_arch, long, gb2018)
```

This is rice archy dataset from dorian?

```{r}
rad <- read_excel('data/data-raw/Rice_RAD3_OWCAD v0_9977.xlsx') %>%
  st_as_sf(coords = c('Longitude', 'Latitude'), crs = 4326) %>%
  select(Site, region = `Main Region`, country = Country, geo_quality = `GeoRef Quality`, samp_quality = `Sample Quality`, date_quality = `Dating Quality`, `Regional phase`:`Est.Date Median BC/AD`, Oryza, Notes:`economix taxa`) %>%
  filter(Oryza != 'Org')
  

mapview::mapview(rad, zcol = 'geo_quality')
mapview::mapview(rad, zcol = 'samp_quality')
mapview::mapview(rad, zcol = 'RiceDating')
```

```{r}
plot(st_geometry(arch_dat))
arch <- here('data/data-raw/Archaeological Rice Dataset.xlsx') %>%
  read_excel() %>%
  st_as_sf(coords = c('Longitude', 'Latitude'), crs = 4326) #%>%
  #rename(age = `Est._Date_Median_BC`) %>%
 # mutate(age = `Est._Date_Median_BC` - 1950) %>%
#  arrange(-age)

library(mapview)
not_near <- function(x, y, dist) !st_is_within_distance(x, y, dist)
mapview(arch_dat, cex = 3) + mapview(st_filter(arch, st_union(arch_dat), .predicate = not_near, dist = 1000)
, col.regions = 'red')

st_filter(arch, st_union(arch_dat), .predicate = not_near, dist = 1000) %>%
  arrange(`Est._Date_Median_BC`) %>%
  st_drop_geometry() %>%
  write_csv('data/data-derived/gutaker_sites_extra.csv')
```

## Genetic Data

```{r}
rice_accessions <- list(indica = 'data/data-raw/indica_accessions.csv',
                        japonica = 'data/data-raw/japonica_accessions.csv') %>%
  map(read_csv) %>%
  map(remove_missing) %>% # missing points data in Taiwan
  map_dfr(st_as_sf, coords = c('LON', 'LAT'), crs = 4326, .id = 'type')


rice_accessions %>%
  select(type) %>%
  plot()
```

```{r}
gen_mod <- extract(chelsa_1km, rice_accessions, ID = FALSE) %>%
  bind_cols(rice_accessions) %>%
  select(ID, type, bio1:bio10) %>%
  write_csv(here('data/data-derived/rice_temperatures_present.csv'))

gen_future <- cmip6 %>%
   st_extract(rice_accessions) %>%
   as_tibble() %>%
   bind_cols(map_dfr(1:45, ~rice_accesssions)) %>%
   select(ID, type, ssp, model, variable, temperature) %>%
   pivot_wider(names_from = variable, values_from = temperature) %>%
     write_csv(here('data/data-derived/rice_temperatures_future.csv'))

gen_past <- chelsa_trace %>%
  st_extract(rice_accessions) %>%
  st_apply(1, max) %>%
  as_tibble() %>%
  bind_cols(rice_accessions) %>%
  select(ID, type, bio1 = MAT, bio5 = tmax, bio10 = twarm) %>%
  write_csv(here('data/data-derived/rice_temperatures_past.csv'))

bind_rows(gen_past, gen_mod, gen_future, .id = 'time') %>%
  pivot_longer(bio1:bio10) %>%
  ggplot(aes(value, color = time)) +
  facet_wrap(~name, nrow = 3) +
  geom_density()
```

## Bootstrapping Archaeological Dates

```{r}
#binsense(cal, c14_cleaned$site, h = c(0, 100, 200), timeRange = c(10000, 0))
#rice_bins <-  binPrep(sites = c14_cleaned$site, ages = c14_cleaned$C14Age, h = 100)
# should do southern hemisphere curve for other dates? its just one date
#bin_pts <- c14_cleaned %>%
#  mutate(bin = rice_bins) %>%
#  select(bin) %>%
#  group_by(bin) %>%
#  slice(1) %>%
#  ungroup()
sampler_c14 <- function(splits) {
  analysis(splits) %>%
    mutate(time = -1 * map_dbl(cal_grid, ~sample(.x$calBP, size = 1, prob = .x$PrDens))) %>%
    select(id, time)
}

sampler_phase <- function(splits) {
   analysis(splits) %>%
    mutate(time = -1 * map2_dbl(age_lower, age_upper, # upper needs to be min not max
                               ~round(runif(1, min = .y, max = .x)))) %>%
    select(id, time)
}

nsim <- 5000
set.seed(5678)
c14_splits <- c14_cleaned %>%
  select(site, id, med_age) %>%
  mutate(cal_grid = cal$grids, .before = geometry) %>%
  group_bootstraps(group = site, times = nsim)

phase_splits <- phases_cleaned %>%
  select(site, id, age_lower, age_upper) %>%
  group_bootstraps(group = site, times = nsim)

boot_joined <- list(c14 = map_dfr(c14_splits$splits, sampler_c14, .id = 'rep'),
                    phase = map_dfr(phase_splits$splits, sampler_phase, .id = 'rep')) %>%
  bind_rows(.id = 'type') %>%
  mutate(time = time)
```

## Climate distributions

```{r}
arch_trace <- arch_dat %>%
  st_extract(chelsa_trace, ., time_column = 'med_age', interpolate_time = TRUE) %>%
  st_drop_geometry() %>%
  bind_cols(select(arch_dat, -c(med_age, age_lower, age_upper)), .) %>%
  remove_missing() # this shouldn't remove anything
```

```{r}
trace_boot <- boot_joined %>%
  st_extract(chelsa_trace, ., time_column = 'time', interpolate_time = TRUE) %>%
  st_drop_geometry() %>%
  bind_cols(st_drop_geometry(boot_joined) %>% select(-time), .) %>%
  remove_missing() # this shouldn't remove anything
```

```{r}
#arch_trace <- readRDS(here('data/data-derived/arch_trace.rds'))
saveRDS(arch_trace, here('data/data-derived/arch_trace.rds'))
#trace_boot <- readRDS('data/data-derived/trace_boot.rds')
saveRDS(trace_boot, 'data/data-derived/trace_boot.rds')
```

```{r}
trace_boot %>%
  filter(time <= -2000) %>%
  select(rep, MAT:twarm) %>%
  pivot_longer(MAT:twarm) %>%
  group_by(rep, name) %>%
  tidy_kde() %>%
ggplot(aes(value, estimate)) +
  geom_line(alpha = 0.01, aes(group = rep)) +
  facet_wrap(~name, scales = 'free_y', nrow = 3)


trace_boot %>%
  filter(time <= -2000) %>%
  select(rep, type, MAT:twarm) %>%
  pivot_longer(MAT:twarm) %>%
  group_by(rep, name, type) %>%
  tidy_kde() %>%
ggplot(aes(value, estimate)) +
  geom_line(alpha = 0.01, aes(group = interaction(rep, type), color = type)) +
  facet_wrap(~name, scales = 'free_y', nrow = 3)
```

Looking at bootstrapped quantiles, there's a differences between dates and phases

```{r}
library(units)
trace_boot %>%
  pivot_longer(MAT:twarm, values_to = 'temperature') %>%
  mutate(temperature = units::set_units(temperature, 'degree_c')) %>%
  group_by(rep, name) %>%
  reframe(quant = quantile(temperature, 0.975, type = 8)) %>%
  ggplot(aes(quant)) +
  geom_histogram() +
  facet_wrap(~name, scales = 'free_x')

trace_boot %>%
  pivot_longer(MAT:twarm, values_to = 'temperature') %>%
  mutate(temperature = units::set_units(temperature, 'degree_c')) %>%
  group_by(type, rep, name) %>%
  reframe(quant = quantile(temperature, 0.975, type = 8)) %>%
  ggplot(aes(quant)) +
  geom_histogram(position = 'stack', aes(fill = type)) +
  facet_wrap(~name, scales = 'free_x') +
  theme_bw()

trace_boot %>%
  pivot_longer(MAT:twarm, values_to = 'temperature') %>%
  mutate(temperature = units::set_units(temperature, 'degree_c')) %>%
  group_by(type, rep, name) %>%
  reframe(quant = quantile(temperature, 0.975, type = 8)) %>%
  ggplot(aes(quant)) +
  geom_histogram() +
  facet_grid(type~name, scales = 'free') +
  theme_bw()
```

group by bin?

```{r}
nsim = 1000
c14_splits_dates <- c14_cleaned %>%
  select(site, C14Age) %>%
  mutate(id = 1:n(),
         cal_grid = cal$grids, .before = geometry) %>%
  slice(which.CalDates(cal, BP > 2000, p = 0.8)) %>% # focus on earlier sites
  bootstraps(times = nsim)

phase_splits_dates <- period_sites %>%
  mutate(id = (1:n()) + nrow(c14_cleaned)) %>%
  filter(age_lower > 2000) %>% # focus on earlier sites
  filter(age_upper < age_lower) %>% # one site has wrong dates?
  select(site, id, age_lower, age_upper) %>%
  bootstraps(times = nsim)

boot_joined_date <- list(c14 = map_dfr(c14_splits_dates$splits, sampler_c14, .id = 'rep'),
                    phase = map_dfr(phase_splits_dates$splits, sampler_phase, .id = 'rep')) %>%
  bind_rows(.id = 'type') %>%
  mutate(time = time * -1)

trace_boot_date <- boot_joined_date %>%
  st_extract(chelsa_trace, ., time_column = 'time', interpolate_time = TRUE) %>%
  st_drop_geometry() %>%
  bind_cols(st_drop_geometry(boot_joined_date) %>% select(-time), .) %>%
  remove_missing() # some dates are earlier than trace

trace_boot_date %>%
  filter(time < -2000)
arch_kde <- trace_boot_date %>%
  filter(time <= -2000) %>%
  select(rep, type, MAT:twarm) %>%
  pivot_longer(MAT:twarm) %>%
  group_by(rep, name, type) %>%
  tidy_kde()

ggplot(test_eks, aes(MAT, estimate)) +
     geom_line(alpha = 0.01, aes(group = rep)) +
  geom_line(data = test_eks2, alpha = 0.01, aes(group = rep), color = 'red')
            
          
ggplot(arch_kde, aes(value, estimate)) +
     geom_line(alpha = 0.01, aes(group = interaction(rep, type), color = type)) +
  facet_wrap(~name, scales = 'free_y', nrow = 3)
```

Plotting spatiotemporal kdes with and without rcarbon functions

```{r}
dens <- arch_trace %>%
  mutate(age = time) %>%
  filter(age < -2000) %>%
  filter(age > -9000) %>%
   mutate(mil = as.factor((age - age %% 1000) / 1000 + 1)) %>%
  arrange(mil) %>%
  group_by(mil) %>%
  st_kde()

ggplot(dens) +
geom_sf(data = st_get_contour(dens))   +
  facet_wrap(~mil)

stkde1 <- stkde(x=cal, coords=st_coordinates(c14_cleaned), win=spatstat.geom::as.owin(asia_bbox_sf), sbw=5, cellres=1, focalyears=seq(9500, 2500, -1000), tbw=500, #bins=rice_bins,
                backsight=500, outdir='data/data-derived/kde_test/', amount=1, verbose=FALSE)

walk(seq(9500, 2500, -1000), ~plot(stkde1, .))
```

## Computational Reproducibility

All analyses carried out in \`R\` \[\@base\]. The entire analysis is run in a reproducible \\\`.qmd\\\` notebook.
